#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"name":"csharp","languageName":"C#","aliases":["c#","C#"]},{"name":"fsharp","languageName":"F#","aliases":["f#","F#"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML","aliases":[]},{"name":"sql","languageName":"SQL","aliases":[]},{"name":"kql","languageName":"KQL","aliases":[]},{"name":"mermaid","languageName":"Mermaid","aliases":[]},{"name":"httpRequest","languageName":"http","aliases":[]},{"name":"value","aliases":[]},{"name":"vscode","aliases":["frontend"],"languageName":null}]}}

#!markdown

# Web Scraping With C#

[Jennifer Marsh | 07 June 2022 ](https://www.scrapingbee.com/blog/web-scraping-csharp/)

[Web Scraping With C# Without Getting Blocked 2021](https://www.scraperapi.com/blog/web-scraping-in-c-sharp/)

// dotnet add package ScrapySharp
// dotnet add package CsvHelper

#!csharp

public class Row
{
        public string Title {get; set;}
}

#!csharp

#r "nuget:ScrapySharp"
// dotnet add package CsvHelper

#!csharp

using HtmlAgilityPack; 
using ScrapySharp.Extensions;

//Send the request to the server
HtmlWeb web = new HtmlWeb();
HtmlDocument doc = web.Load("https://blog.hubspot.com/topic-learning-path/customer-retention");

#!csharp

//Select a specific node from the HTML doc
var Headers = doc.DocumentNode.CssSelect("h3.blog-card__content-title > a");

//Extract the text and store it in a list
var titles = new List<Row>();
foreach (var item in Headers)
{
    Console.WriteLine(item.InnerText);
    titles.Add(new Row { Title = item.InnerText});
}
